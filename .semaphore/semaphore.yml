version: v1.0
name: Catena api
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
execution_time_limit:
  minutes: 30

blocks:
  - name: Check master
    task:
      jobs:
        - name: check master
          commands:
            - if [ "$SEMAPHORE_GIT_BRANCH" != "master" ]; then false; fi
            - echo 'Master branch received'

  - name: Install
    task:
      jobs:
        - name: npm install and cache
          commands:
            - checkout
            - cache restore node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package.json),node-modules-$SEMAPHORE_GIT_BRANCH,node-modules-master
            - npm install
            - cache store node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package.json) node_modules

  - name: Test
    task:
      secrets:
        - name: catena-api-secrets
      env_vars:
        - name: NODE_ENV
          value: test
        - name: DB_CONNECTION
          value: mysql
        - name: DB_DATABASE
          value: catena_test
        - name: DB_PASSWORD
          value: ''
      prologue:
        commands:
          - checkout
          - cp ../.env .
          - cache restore node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),node-modules-$SEMAPHORE_GIT_BRANCH,node-modules-master
          - sem-service start mysql
          - sudo apt-get install -y -qq mysql-client
          - mysql --host=0.0.0.0 -uroot -e "create database if not exists $DB_DATABASE"
      jobs:
        - name: test
          commands:
            - npm run test
        - name: lint
          commands:
            - npm run lint

  - name: Package
    task:
      env_vars:
        - name: NODE_ENV
          value: production
      prologue:
        commands:
          - checkout
          - cache restore node-modules-$SEMAPHORE_GIT_BRANCH-$(checksum package.json),node-modules-$SEMAPHORE_GIT_BRANCH,node-modules-master
      jobs:
        - name: package
          commands:
            - cache store app-$SEMAPHORE_WORKFLOW_ID app
            - cache store config-$SEMAPHORE_WORKFLOW_ID config
            - cache store database-$SEMAPHORE_WORKFLOW_ID database
            - cache store public-$SEMAPHORE_WORKFLOW_ID public
            - cache store start-$SEMAPHORE_WORKFLOW_ID start
            - cache store ace-$SEMAPHORE_WORKFLOW_ID ace
            - cache store app-$SEMAPHORE_WORKFLOW_ID app
            - cache store package-$SEMAPHORE_WORKFLOW_ID package.json
            - cache store server-$SEMAPHORE_WORKFLOW_ID server.js
            - cache store run-$SEMAPHORE_WORKFLOW_ID run.sh
            - cache store stop-$SEMAPHORE_WORKFLOW_ID stop.sh
            - cache store dockerfile-$SEMAPHORE_WORKFLOW_ID Dockerfile
            - cache store dockerignore-$SEMAPHORE_WORKFLOW_ID .dockerignore
            - cache store dockercompose-$SEMAPHORE_WORKFLOW_ID docker-compose.yml
promotions:
  - name: Deploy to production
    pipeline_file: production-deploy.yml
    auto_promote_on:
      - result: passed
        branch:
          - master

  - name: Deploy to staging
    pipeline_file: staging-deploy.yml
